--- e2fsprogs-1.43.7/configure.ac.omv~	2017-11-23 01:15:27.257335742 +0100
+++ e2fsprogs-1.43.7/configure.ac	2017-11-23 01:18:26.341669348 +0100
@@ -1204,7 +1204,7 @@ else
 #define FUSE_USE_VERSION 29])
 
 	AC_PREPROC_IFELSE(
-[AC_LANG_PROGRAM([[#define FUSE_USE_VERSION 29
+[AC_LANG_PROGRAM([[#define FUSE_USE_VERSION 30
 #ifdef __linux__
 #include <linux/fs.h>
 #include <linux/falloc.h>
@@ -1213,14 +1213,14 @@ else
 ]], [])], [], [AC_MSG_FAILURE([Cannot find fuse2fs Linux headers.])])
 
 	AC_CHECK_LIB(osxfuse, fuse_main, [FUSE_LIB=-losxfuse],
-		[AC_CHECK_LIB(fuse, fuse_main, [FUSE_LIB=-lfuse],
+		[AC_CHECK_LIB(fuse3, fuse_main_real, [FUSE_LIB=-lfuse3],
 			      [AC_MSG_FAILURE([Cannot find fuse library.])])])
 	AC_MSG_RESULT([Enabling fuse2fs])
 fi
 ,
 AC_CHECK_HEADERS([pthread.h fuse.h], [], [FUSE_CMT="#"],
 [#define _FILE_OFFSET_BITS	64
-#define FUSE_USE_VERSION 29
+#define FUSE_USE_VERSION 30
 #ifdef __linux__
 # include <linux/fs.h>
 # include <linux/falloc.h>
@@ -1229,7 +1229,7 @@ AC_CHECK_HEADERS([pthread.h fuse.h], [],
 if test -z "$FUSE_CMT"
 then
 	AC_CHECK_LIB(osxfuse, fuse_main, [FUSE_LIB=-losxfuse],
-[AC_CHECK_LIB(fuse, fuse_main, [FUSE_LIB=-lfuse], [FUSE_CMT="#"])])
+[AC_CHECK_LIB(fuse3, fuse_main_real, [FUSE_LIB=-lfuse3], [FUSE_CMT="#"])])
 fi
 if test -z "$FUSE_CMT"
 then
--- e2fsprogs-1.43.7/misc/fuse2fs.c.omv~	2017-11-23 01:33:52.411349220 +0100
+++ e2fsprogs-1.43.7/misc/fuse2fs.c	2017-11-23 01:48:07.929600019 +0100
@@ -9,7 +9,7 @@
  * %End-Header%
  */
 #define _FILE_OFFSET_BITS 64
-#define FUSE_USE_VERSION 29
+#define FUSE_USE_VERSION 30
 #ifndef _GNU_SOURCE
 #define _GNU_SOURCE
 #endif
@@ -717,7 +717,7 @@ static void op_destroy(void *p EXT2FS_AT
 	}
 }
 
-static void *op_init(struct fuse_conn_info *conn)
+static void *op_init(struct fuse_conn_info *conn, struct fuse_config *cfg)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -803,7 +803,7 @@ static int stat_inode(ext2_filsys fs, ex
 	return ret;
 }
 
-static int op_getattr(const char *path, struct stat *statbuf)
+static int op_getattr(const char *path, struct stat *statbuf, struct fuse_file_info *fi)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -1542,7 +1542,7 @@ static int update_dotdot_helper(ext2_ino
 	return 0;
 }
 
-static int op_rename(const char *from, const char *to)
+static int op_rename(const char *from, const char *to, unsigned int flags)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -1871,7 +1871,7 @@ out:
 	return ret;
 }
 
-static int op_chmod(const char *path, mode_t mode)
+static int op_chmod(const char *path, mode_t mode, struct fuse_file_info *fi)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -1930,7 +1930,7 @@ out:
 	return ret;
 }
 
-static int op_chown(const char *path, uid_t owner, gid_t group)
+static int op_chown(const char *path, uid_t owner, gid_t group, struct fuse_file_info *fi)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -1997,7 +1997,7 @@ out:
 	return ret;
 }
 
-static int op_truncate(const char *path, off_t len)
+static int op_truncate(const char *path, off_t len, struct fuse_file_info *fi)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -2761,7 +2761,7 @@ static int op_readdir_iter(ext2_ino_t di
 
 	memcpy(namebuf, dirent->name, dirent->name_len & 0xFF);
 	namebuf[dirent->name_len & 0xFF] = 0;
-	ret = i->func(i->buf, namebuf, NULL, 0);
+	ret = i->func(i->buf, namebuf, NULL, 0, 0);
 	if (ret)
 		return DIRENT_ABORT;
 
@@ -2771,7 +2771,7 @@ static int op_readdir_iter(ext2_ino_t di
 static int op_readdir(const char *path EXT2FS_ATTR((unused)),
 		      void *buf, fuse_fill_dir_t fill_func,
 		      off_t offset EXT2FS_ATTR((unused)),
-		      struct fuse_file_info *fp)
+		      struct fuse_file_info *fp, enum fuse_readdir_flags flags)
 {
 	struct fuse_context *ctxt = fuse_get_context();
 	struct fuse2fs *ff = (struct fuse2fs *)ctxt->private_data;
@@ -3574,7 +3574,7 @@ out:
 	return ret;
 }
 # endif /* SUPPORT_FALLOCATE */
-#endif /* FUSE 29 */
+#endif /* FUSE 30 */
 
 static struct fuse_operations fs_ops = {
 	.init = op_init,
@@ -3607,6 +3607,7 @@ static struct fuse_operations fs_ops = {
 	.fsyncdir = op_fsync,
 	.access = op_access,
 	.create = op_create,
+#if 0
 	.ftruncate = op_ftruncate,
 	.fgetattr = op_fgetattr,
 	.utimens = op_utimens,
@@ -3615,6 +3616,7 @@ static struct fuse_operations fs_ops = {
 	.flag_utime_omit_ok = 1,
 # endif
 #endif
+#endif
 	.bmap = op_bmap,
 #ifdef SUPERFLUOUS
 	.lock = op_lock,
@@ -3622,10 +3624,14 @@ static struct fuse_operations fs_ops = {
 #endif
 #if FUSE_VERSION >= FUSE_MAKE_VERSION(2, 8)
 	.ioctl = op_ioctl,
+#if 0
 	.flag_nullpath_ok = 1,
 #endif
+#endif
 #if FUSE_VERSION >= FUSE_MAKE_VERSION(2, 9)
+#if 0
 	.flag_nopath = 1,
+#endif
 # ifdef SUPPORT_FALLOCATE
 	.fallocate = op_fallocate,
 # endif
